ссылки на репозитории:

https://github.com/IrinaShir/Terminal.git
https://github.com/IrinaShir/JSON.git
https://github.com/IrinaShir/XML.git
https://github.com/IrinaShir/TXT.git


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal. 
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON - в Githab создать new репозиторий, сделать Public, зайти в него, найти ссылку для клонирования
 5. Клонировать репозиторий JSON на локальный компьютер - mkdir JSON, cd JSON,  git clone https://github.com/IrinaShir/JSON.git
 6. Внутри локального JSON создать файл “new.json” - touch new.json
 7. Добавить файл под гит - git status и git add .
 8. Закоммитить файл - git commit -m "создан пустой файл"
 9. Отправить файл на внешний GitHub репозиторий - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON - 
{
    "ФИО": "Широбокова Ирина Викторовна", "возраст": 43, "количество домашних животных": 1, "будущая желаемая зарплата": "от 50 000 р."
  }
 11. Отправить изменения на внешний репозиторий - git status , git add .  , git commit -m "добавлены данные о себе" и git push
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON - 
{
    "Любимый фильм": "Там, на неведомых дорожках", "любимый сериал": "Кости", "любимая еда": "макароны по-флотски", "любимое время года": "лето", "страна, которую хотели бы посетить": "Израиль"
}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - touch sklls.json
{
    "Навыки, которые будут получены на курсе": "умение работать в терминале, знакомство с githab и мгогое другое"
}
 15. Отправить сразу 2 файла на внешний репозиторий - git status , git add .  , git commit -m "добавленны 2 файла с данными о себе" и git push
 16. На веб интерфейсе создать файл bug_report.json - в репозитории JSON нажать на Add file 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON - открыть в репозитории файл bug_report.json и добавить текст 
{
  "ID": "BR-001",
  "Name": "ошибка 404 при поптытке открыть http://www......", 
  "Steps": [
  {"1.": "пройти по адресу http://www......."},
  {"2.": "зарегистрироваться по своему login и password"},
  {"3.": "войти в систему"}
  ],
   "Expected result": [
     {"1.": "открыта страница http://www......."},
     {"2.": "система предлагает затегистрироваться по login и password "},
     {"3.": "пользователь успешно авторизован"}
   ],
  "Actual result": "при попытке пройти по адресу http://www...... система выдает ошибку 404"
  }
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе - добавлен комментарий "добавлен баг-репорт" и документ сохранен
 20. Синхронизировать внешний и локальный репозиторий JSON -  git fetch , git pull


XML
 21. Создать внешний репозиторий c названием XML - в Githab создать new репозиторий, сделать Public, зайти в него, найти ссылку для клонирования
 22. Клонировать репозиторий XML на локальный компьютер - mkdir XML, cd XML, git clone https://github.com/IrinaShir/XML.git
 23. Внутри локального XML создать файл “new.xml” - touch new.xml
 24. Добавить файл под гит - git stanus и git add .
 25. Закоммитить файл - git commit -m "создан пустой документ"
 26. Отправить файл на внешний GitHub репозиторий -git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML - 
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE myself>
<my>
	<name>Широбокова Ирина Викторовна</name>
	<age>43</age>
	<number_of_pets>1</number_of_pets>
	<future_desired_salary>от 50 000 р.</future_desired_salary>
</my>
 28. Отправить изменения на внешний репозиторий - git status , git add .  , git commit -m "добавлены данные о себе" и git push
 29. Создать файл preferences.xml - touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE preferences>
<preferences>
	<favorite_film>Там, на неведомых дорожках</favorite_film>
	<favorite_TV_series>Кости</favorite_TV_series> 
	<favorite_food>макароны по-флотски</favorite_food>
	<favourite_season>лето</favourite_season>
	<the_party_you_would_like_to_visit>Израиль</the_party_you_would_like_to_visit>
</preferences>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - touch sklls.xml 
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE skills>
<skills>
	<Skills_to_be_acquired_during_the_course>умение работать в терминале, знакомство с githab и мгогое другое</Skills_to_be_acquired_during_the_course>
</skils>
 32. Сделать коммит в одну строку - git rebase -i HEAD~2 комментарий - документ отредактирован 
 33. Отправить сразу 2 файла на внешний репозиторий - git status , git add .  , git commit -m "добавленны 2 файла с данными о себе" и git push -f
 34. На веб интерфейсе создать файл bug_report.xml - в репозитории XML нажать на Add file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе -Commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML - 
<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE bug_report>
<bug_report>
  <ID>BR-001</ID>
  <Name>ошибка 404 при поптытке открыть http://www......</Name>
  <Steps>
    <s1.>пройти по адресу http://www.......</s1.>
    <s2.>зарегистрироваться по своему login и password</s2.>
    <s3.>войти в систему</s3.>
    </Steps>
  <Expected_result>
    <s1.>открыта страница http://www.......</s1.>
    <s2.>система предлагает затегистрироваться по login и password</s2.>
    <s3.>пользователь успешно авторизован</s3.>
  </Expected_result>
  <Actual_result>при попытке пройти по адресу http://www...... система выдает ошибку 404</Actual_result>
</bug_report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе - добавлен комментарий "добавлен баг-репорт" и документ сохранен
 38. Синхронизировать внешний и локальный репозиторий XML - git fetch , git pull


TXT
 1. Создать внешний репозиторий c названием TXT - в Githab создать new репозиторий, сделать Public, зайти в него, найти ссылку для клонирования
 2. Клонировать репозиторий TXT на локальный компьютер - mkdir TXT, cd TXT, git clone https://github.com/IrinaShir/XML.git
 3. Внутри локального TXT создать файл “new.txt” - touch new.txt
 4. Добавить файл под гит - git stanus и git add .
 5. Закоммитить файл - git commit -m "создан пустой документ"
 6. Отправить файл на внешний GitHub репозиторий - git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
ФИО: Широбокова Ирина Викторовна
Возраст: 43
Количество домашних животных: 1
Будущая желаемая зарплата: от 50 000 р.
 8. Отправить изменения на внешний репозиторий - git status , git add .  , git commit -m "добавлены данные о себе" и git push
 9. Создать файл preferences.txt - touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT - 
Любимый фильм: "Там, на неведомых дорожках"
Любимый сериал: "Кости"
Любимая еда: макароны по-флотски
Любимое время года: лето
Страна, которую хотели бы посетить: Израиль 
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - touch sklls.txt
Навыки, которые будут получены на курсе: умение работать в терминале, знакомство с githab и многое другое
 12. Сделать коммит в одну строку - git rebase -i HEAD~2 комментарий - документ отредактирован
 13. Отправить сразу 2 файла на внешний репозиторий - git status , git add .  , git commit -m "добавленны 2 файла с данными о себе" и git push -f
 14. На веб интерфейсе создать файл bug_report.txt - в репозитории TXT нажать на Add file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT - 
ID: BR-001
Name: ошибка 404 при поптытке открыть http://www...... 
Steps: 1. пройти по адресу http://www.......
       2. зарегистрироваться по своему login и password
       3. войти в систему
Expected result: 1. открыта страница http://www.......
                 2. система предлагает затегистрироваться по login и password
                 3. пользователь успешно авторизован
Actual result: при попытке пройти по адресу http://www...... система выдает ошибку 404
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - добавлен комментарий "добавлен баг-репорт" и документ сохранен
 18. Синхронизировать внешний и локальный репозиторий TXT - git fetch , git pull
